Search.setIndex({"docnames": ["index", "modules", "pipeline", "pipeline.auxiliar_modules", "pipeline.tables"], "filenames": ["index.rst", "modules.rst", "pipeline.rst", "pipeline.auxiliar_modules.rst", "pipeline.tables.rst"], "titles": ["Welcome to LiRA Visualization Processing Pipeline\u2019s documentation!", "Pipeline", "Pipeline Package", "Auxiliar Modules Package", "Tables Package"], "terms": {"index": [], "modul": [0, 1], "search": 4, "page": [], "packag": [0, 1], "subpackag": [0, 1], "auxiliar_modul": [], "submodul": [], "auxiliar_class": [], "db_queri": [], "map_match": [], "content": [], "row_typ": [], "tabl": [0, 1, 2], "aggregated_valu": [], "aggregation_method": [], "computed_valu": [], "computed_values_typ": [], "measur": [1, 2, 3], "segment": [1, 2], "segments_properti": [], "main": [0, 1], "test": [0, 1], "aggregation_techniqu": [], "averag": [], "minimum": [], "acceler": 4, "hillclimbingforc": [], "inertialforc": [], "revolutionsperminut": [], "speed": [], "tractionforc": [], "tractionpow": [], "segment_properti": [], "theta": [], "class": [1, 2, 4], "node": [3, 4], "id": [3, 4], "int": [3, 4], "lat": 3, "float": [3, 4], "lon": 3, "base": [2, 3, 4], "object": [3, 4], "nodesdictionari": 3, "arg": [3, 4], "kwarg": [3, 4], "drop": [3, 4], "fill": 3, "list": [3, 4], "get_node_by_id": 3, "node_id": 3, "nodes_dict": [], "dict": [], "wai": [3, 4], "waysdictionari": 3, "get_way_by_id": 3, "way_id": [3, 4], "get_ways_id": 3, "ways_dict": [], "updateaggregateddata": [], "data": [3, 4], "connect": 3, "postgresql": 3, "databas": [1, 2, 4], "server": 3, "connect_to_main_db": 3, "delete_al": [], "get_computed_values_in_wai": [], "get_computed_wai": [], "get_raw_measurements_from_main_db": [], "trip": 4, "get_segment_properties_in_wai": [], "get_segments_from_wai": [], "insert_seg": [], "classify_wai": 3, "str": [3, 4], "testtabl": 2, "methodnam": 2, "runtest": 2, "testcas": 2, "computed_wai": 4, "not_computed_wai": 4, "setup": 2, "hook": 2, "method": [1, 2, 3], "set": [2, 3, 4], "up": 2, "fixtur": 2, "befor": 2, "exercis": 2, "teardown": 2, "deconstruct": 2, "after": 2, "test_1_pre_process": [], "test_2_computed_values_types_t": [], "test_3_aggregation_methods_t": [], "test_4_segments_t": [], "test_5_measurements_t": [], "test_6_segments_properties_t": [], "test_7_computed_values_t": [], "test_8_aggregated_values_t": [], "format_and_map_match_measur": 3, "measurements_from_db": 3, "get_nodes_and_ways_from_way_id": 3, "get_unique_nod": [], "get_unique_wai": [], "ndarrai": [], "map_match_chunk": 3, "overpass_queri": 3, "queri": [1, 2], "req_valhalla_servic": 3, "chunk": 3, "aggregationmethod": 4, "descript": 4, "valu": [1, 2], "name": 4, "calculate_valu": 4, "type": [1, 2], "computedvaluetyp": 4, "direct": 4, "computedvalu": 4, "aggreg": [1, 2], "x": [], "compon": 3, "unit": 4, "m": [], "s\u00b2": [], "static": 4, "prerequisit": 4, "hill": [], "climb": [], "forc": [], "traction": [], "energi": [], "newton": [], "inerti": [], "how": [], "mani": [], "time": [3, 4], "crankshaft": [], "engin": [], "make": [], "one": 4, "full": [], "rotat": [], "minut": [], "revolut": [], "per": [], "rpm": [], "vehicl": [], "km": [], "h": [], "calcul": [], "from": [3, 4], "power": 4, "taken": 4, "w": [], "segmentproperti": 4, "get_elev": [], "point": [3, 4], "aggregatedvalu": 4, "count": 4, "get_db_row": 4, "aggregated_values_to_insert": [], "aggregated_values_to_upd": [], "compute_data": 4, "generate_aggregated_valu": 4, "get_aggregation_type_class": 4, "get_data_type_class": 4, "get_values_of_type_and_direct": [], "type_id": [], "insert_into_db": 4, "update_values_in_db": 4, "computed_aggregation_method": [], "generate_aggregation_method": 4, "generate_id": 4, "list_modul": 4, "get_aggregation_method": 4, "get_aggregation_methods_class": 4, "get_id_of_nam": 4, "get_insert": 4, "get_method_by_nam": 4, "self": 4, "compute_dictionari": 4, "computed_values_in_db": [], "computed_values_per_seg": [], "computed_values_to_insert": [], "generate_computed_valu": 4, "get_computed_values_in_seg": 4, "segment_id": 4, "get_computed_values_types_class": 4, "parse_computed_valu": 4, "computed_values_row": 4, "computedvaluestyp": 4, "generate_computed_values_typ": 4, "get_name_by_id": [], "get_type_by_id": 4, "get_type_by_nam": 4, "posit": 4, "created_at": 4, "updated_at": 4, "calculate_dist": 4, "point_a": 4, "point_b": 4, "compute_direct": 4, "compute_measur": 4, "compute_measurements_for_a_trip": [], "generate_dictionari": 4, "computed_measur": 4, "get_closest_measurement_of_type_in_seg": 4, "get_measurement_by_id": 4, "measurement_id": 4, "get_measur": 4, "get_next_measurement_of_type_in_seg": [], "get_previous_measurement_of_type_in_seg": [], "is_point_c_between_a_and_b": 4, "point_c": 4, "measurements_per_id": [], "measurements_per_seg": [], "measurements_per_typ": [], "segment_of_measur": [], "filter_measur": 4, "format_2d_measur": 4, "format_3d_measur": 4, "format_for_map_match": 4, "format_measur": 4, "parse_measur": 4, "measurements_row": 4, "position_a": 4, "position_b": 4, "length": 4, "compute_wai": 4, "compute_ways_and_generate_seg": 4, "computed_seg": 4, "node_a": 4, "node_b": 4, "generate_segments_for_a_trip": [], "not_computed_way_id": [], "get_segments_by_id": 4, "seg_id": 4, "get_segments_in_a_wai": 4, "segments_per_id": [], "segments_per_wai": [], "parse_seg": 4, "segment_row": 4, "none": 4, "segmentsproperti": 4, "generate_segments_properti": 4, "ways_to_comput": 4, "get_segment_properti": 4, "property_nam": 4, "get_segments_properties_types_class": 4, "segment_properties_in_db": [], "segment_properties_to_insert": [], "parse_segment_properti": 4, "segment_properties_row": 4, "thi": [3, 4], "sphinx": [], "conceptu": [3, 4], "represent": [3, 4], "paramet": [3, 4], "The": [3, 4], "latitud": [3, 4], "longitud": [3, 4], "first": [3, 4], "second": 4, "kilomet": 4, "which": [3, 4], "pertain": 4, "return": [3, 4], "insert": [3, 4], "visual": [3, 4], "It": [3, 4], "store": [3, 4], "ar": [3, 4], "us": [3, 4], "dure": 4, "process": 4, "allow": 4, "access": [3, 4], "them": [3, 4], "an": 4, "effici": [3, 4], "program": 4, "singleton": [3, 4], "so": 4, "instanc": [3, 4], "exist": 4, "same": 4, "can": 4, "ani": 4, "distanc": 4, "between": [3, 4], "two": 4, "geograph": [3, 4], "comput": [1, 2, 3], "creat": 4, "pass": [3, 4], "whose": 4, "need": [3, 4], "retriev": 4, "instead": 4, "have": 4, "never": 4, "been": 4, "certain": 4, "param": 4, "delet": [3, 4], "all": [3, 4], "dictionari": [3, 4], "purpos": 4, "most": 4, "gener": 4, "uniqu": 4, "attribut": 4, "identifi": 4, "must": 4, "convert": 4, "row": 4, "within": 4, "A": 4, "repres": 4, "car": 4, "sensor": 4, "ex": 4, "obd": 4, "trac_con": 4, "timestamp": 4, "when": 4, "wa": 4, "updat": 4, "lira": [3, 4], "go": 4, "refer": 4, "assign": 4, "candid": 4, "closest": 4, "anoth": 4, "c": 4, "b": 4, "reduc": 4, "amount": 4, "origin": 4, "format": [3, 4], "just": 4, "1": 4, "dimens": 4, "consumpt": 4, "three": 4, "each": 4, "3": 4, "acc": 4, "xyz": 4, "readi": 4, "map": [1, 2, 4], "match": [1, 2, 4], "take": 4, "properti": [1, 2], "overridden": 4, "subclass": 4, "implement": 4, "associ": 4, "afterward": 4, "differ": 4, "relat": 4, "boolean": 4, "indic": 4, "filter": 4, "avoid": 4, "function": 4, "describ": 4, "alreadi": [3, 4], "contain": [3, 4], "equal": 4, "result": [3, 4], "appli": 4, "number": 4, "ha": [3, 4], "locat": 3, "singl": 3, "ensur": 3, "dedic": 3, "structur": 3, "waydictionari": 3, "nodedictionari": 3, "execut": 3, "overpass": 3, "its": 3, "get": 3, "osm": 3, "request": 3, "valhalla": 3, "servic": 3, "perform": 3, "separ": 3, "For": 3, "divid": 3, "classifi": 3, "hello": [], "automodul": [], "member": [], "show": [], "inherit": [], "auxiliar": [0, 1, 2], "pipelin": [3, 4]}, "objects": {"pipeline.auxiliar_modules": [[3, 0, 0, "-", "auxiliar_classes"], [3, 0, 0, "-", "db_queries"], [3, 0, 0, "-", "map_matching"]], "pipeline.auxiliar_modules.auxiliar_classes": [[3, 1, 1, "", "Node"], [3, 1, 1, "", "NodesDictionary"], [3, 1, 1, "", "Way"], [3, 1, 1, "", "WaysDictionary"]], "pipeline.auxiliar_modules.auxiliar_classes.NodesDictionary": [[3, 2, 1, "", "drop"], [3, 2, 1, "", "fill"], [3, 2, 1, "", "get_node_by_id"]], "pipeline.auxiliar_modules.auxiliar_classes.WaysDictionary": [[3, 2, 1, "", "drop"], [3, 2, 1, "", "fill"], [3, 2, 1, "", "get_way_by_id"], [3, 2, 1, "", "get_ways_ids"]], "pipeline.auxiliar_modules.db_queries": [[3, 3, 1, "", "connect"], [3, 3, 1, "", "connect_to_main_db"]], "pipeline.auxiliar_modules.map_matching": [[3, 3, 1, "", "classify_ways"], [3, 3, 1, "", "format_and_map_match_measurements"], [3, 3, 1, "", "get_nodes_and_ways_from_way_ids"], [3, 3, 1, "", "map_match_chunk"], [3, 3, 1, "", "overpass_query"], [3, 3, 1, "", "req_valhalla_service"]], "pipeline": [[2, 0, 0, "-", "main"], [2, 0, 0, "-", "test"]], "pipeline.tables": [[4, 0, 0, "-", "aggregated_values"], [4, 0, 0, "-", "aggregation_methods"], [4, 0, 0, "-", "computed_values"], [4, 0, 0, "-", "computed_values_types"], [4, 0, 0, "-", "measurements"], [4, 0, 0, "-", "segments"], [4, 0, 0, "-", "segments_properties"]], "pipeline.tables.aggregated_values": [[4, 1, 1, "", "AggregatedValue"], [4, 1, 1, "", "AggregatedValues"]], "pipeline.tables.aggregated_values.AggregatedValue": [[4, 2, 1, "", "get_db_row"]], "pipeline.tables.aggregated_values.AggregatedValues": [[4, 2, 1, "", "compute_data"], [4, 2, 1, "", "drop"], [4, 2, 1, "", "generate_aggregated_values"], [4, 2, 1, "", "get_aggregation_type_classes"], [4, 2, 1, "", "get_data_type_classes"], [4, 2, 1, "", "insert_into_db"], [4, 2, 1, "", "update_values_in_db"]], "pipeline.tables.aggregation_methods": [[4, 1, 1, "", "AggregationMethod"], [4, 1, 1, "", "AggregationMethods"]], "pipeline.tables.aggregation_methods.AggregationMethod": [[4, 2, 1, "", "calculate_value"], [4, 2, 1, "", "get_db_row"]], "pipeline.tables.aggregation_methods.AggregationMethods": [[4, 2, 1, "", "compute_data"], [4, 2, 1, "", "drop"], [4, 2, 1, "", "generate_aggregation_methods"], [4, 2, 1, "", "get_aggregation_methods"], [4, 2, 1, "", "get_aggregation_methods_classes"], [4, 2, 1, "", "get_inserted"], [4, 2, 1, "", "get_method_by_name"], [4, 2, 1, "", "insert_into_db"]], "pipeline.tables.computed_values": [[4, 1, 1, "", "ComputedValue"], [4, 1, 1, "", "ComputedValues"], [4, 3, 1, "", "parse_computed_values"]], "pipeline.tables.computed_values.ComputedValue": [[4, 2, 1, "", "calculate_value"], [4, 2, 1, "", "get_db_row"], [4, 2, 1, "", "prerequisites"]], "pipeline.tables.computed_values.ComputedValues": [[4, 2, 1, "", "compute_data"], [4, 2, 1, "", "compute_dictionaries"], [4, 2, 1, "", "drop"], [4, 2, 1, "", "generate_computed_values"], [4, 2, 1, "", "get_computed_values_in_segment"], [4, 2, 1, "", "get_computed_values_types_classes"], [4, 2, 1, "", "insert_into_db"]], "pipeline.tables.computed_values_types": [[4, 1, 1, "", "ComputedValueType"], [4, 1, 1, "", "ComputedValuesTypes"]], "pipeline.tables.computed_values_types.ComputedValueType": [[4, 2, 1, "", "get_db_row"]], "pipeline.tables.computed_values_types.ComputedValuesTypes": [[4, 2, 1, "", "compute_data"], [4, 2, 1, "", "drop"], [4, 2, 1, "", "generate_computed_values_types"], [4, 2, 1, "", "generate_ids"], [4, 2, 1, "", "get_computed_values_types_classes"], [4, 2, 1, "", "get_id_of_name"], [4, 2, 1, "", "get_inserted"], [4, 2, 1, "", "get_type_by_id"], [4, 2, 1, "", "get_type_by_name"], [4, 2, 1, "", "insert_into_db"]], "pipeline.tables.measurements": [[4, 1, 1, "", "Measurement"], [4, 1, 1, "", "Measurements"], [4, 3, 1, "", "filter_measurements"], [4, 3, 1, "", "format_2d_measurement"], [4, 3, 1, "", "format_3d_measurement"], [4, 3, 1, "", "format_for_map_matching"], [4, 3, 1, "", "format_measurements"], [4, 3, 1, "", "parse_measurements"]], "pipeline.tables.measurements.Measurement": [[4, 2, 1, "", "get_db_row"]], "pipeline.tables.measurements.Measurements": [[4, 2, 1, "", "calculate_distance"], [4, 2, 1, "", "compute_data"], [4, 2, 1, "", "compute_directions"], [4, 2, 1, "", "compute_measurement"], [4, 2, 1, "", "compute_measurements"], [4, 2, 1, "", "drop"], [4, 2, 1, "", "generate_dictionaries"], [4, 2, 1, "", "get_closest_measurement_of_type_in_segment"], [4, 2, 1, "", "get_measurement_by_id"], [4, 2, 1, "", "get_measurements"], [4, 2, 1, "", "insert_into_db"], [4, 2, 1, "", "is_point_c_between_a_and_b"]], "pipeline.tables.segments": [[4, 1, 1, "", "Segment"], [4, 1, 1, "", "Segments"], [4, 3, 1, "", "parse_segments"]], "pipeline.tables.segments.Segment": [[4, 2, 1, "", "get_db_row"]], "pipeline.tables.segments.Segments": [[4, 2, 1, "", "calculate_distance"], [4, 2, 1, "", "compute_data"], [4, 2, 1, "", "compute_way"], [4, 2, 1, "", "compute_ways_and_generate_segments"], [4, 2, 1, "", "drop"], [4, 2, 1, "", "generate_dictionaries"], [4, 2, 1, "", "generate_id"], [4, 2, 1, "", "get_segments_by_id"], [4, 2, 1, "", "get_segments_in_a_way"], [4, 2, 1, "", "insert_into_db"]], "pipeline.tables.segments_properties": [[4, 1, 1, "", "SegmentProperty"], [4, 1, 1, "", "SegmentsProperties"], [4, 3, 1, "", "parse_segment_properties"]], "pipeline.tables.segments_properties.SegmentProperty": [[4, 2, 1, "", "calculate_value"], [4, 2, 1, "", "get_db_row"]], "pipeline.tables.segments_properties.SegmentsProperties": [[4, 2, 1, "", "compute_data"], [4, 2, 1, "", "drop"], [4, 2, 1, "", "generate_segments_properties"], [4, 2, 1, "", "get_segment_property"], [4, 2, 1, "", "get_segments_properties_types_classes"], [4, 2, 1, "", "insert_into_db"]], "pipeline.test": [[2, 1, 1, "", "TestTables"]], "pipeline.test.TestTables": [[2, 2, 1, "", "setUp"], [2, 2, 1, "", "tearDown"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "lira": 0, "visual": 0, "process": 0, "pipelin": [0, 1, 2], "s": 0, "document": 0, "indic": [], "tabl": 4, "packag": [2, 3, 4], "subpackag": 2, "submodul": [], "main": 2, "modul": [2, 3, 4], "test": 2, "content": 0, "auxiliar_modul": [], "auxiliar_class": [], "db_queri": [], "map_match": [], "row_typ": [], "aggregation_techniqu": [], "averag": [], "minimum": [], "computed_valu": [], "acceler": [], "hillclimbingforc": [], "inertialforc": [], "revolutionsperminut": [], "speed": [], "tractionforc": [], "tractionpow": [], "segment_properti": [], "theta": [], "aggregated_valu": [], "aggregation_method": [], "computed_values_typ": [], "measur": 4, "segment": 4, "segments_properti": [], "auxiliar": 3, "class": 3, "databas": 3, "queri": 3, "map": 3, "match": 3, "aggreg": 4, "valu": 4, "method": 4, "comput": 4, "type": 4, "properti": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 56}})